// Copyright 2021 Lightbend Inc.

// This is the public API offered by the Shopping Cart Event Sourced Entity.

syntax = "proto3";

package shopping.cart.api;

option java_outer_classname = "ShoppingCartApi";

import "akkaserverless/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

message AddLineItem {
  string cart_id = 1 [(akkaserverless.field).entity_key = true];
  string product_id = 2;
  string name = 3;
  int32 quantity = 4;
}

message RemoveLineItem {
  string cart_id = 1 [(akkaserverless.field).entity_key = true];
  string product_id = 2;
  int32 quantity = 3;
}

message GetShoppingCart {
  string cart_id = 1 [(akkaserverless.field).entity_key = true];
}

message Checkout {
  string cart_id = 1 [(akkaserverless.field).entity_key = true];
}

message LineItem {
  string product_id = 1;
  string name = 2;
  int32 quantity = 3;
}

message Cart {
  repeated LineItem items = 1;
  int64 checked_out_timestamp = 2;
}

service ShoppingCartService {
  option (akkaserverless.service).entity.type = ".persistence.ShoppingCart";

  rpc AddItem(AddLineItem) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/cart/{cart_id}/items/add"
      body: "*"
    };
  }
  rpc RemoveItem(RemoveLineItem) returns (google.protobuf.Empty) {
    option (google.api.http).post = "/cart/{cart_id}/items/{product_id}/remove";
  }
  rpc GetCart(GetShoppingCart) returns (Cart) {
    option (google.api.http) = {
      get: "/carts/{cart_id}"
      additional_bindings: {
        get: "/carts/{cart_id}/items"
        response_body: "items"
      }
    };
  }
  rpc CheckoutCart(Checkout) returns (Cart) {
    option (google.api.http) = {
      post: "/cart/{cart_id}/checkout"
      body: "*"
    };
  }
}
