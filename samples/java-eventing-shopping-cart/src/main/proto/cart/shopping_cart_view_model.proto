// Copyright 2019 Lightbend Inc.

syntax = "proto3";

package shopping.cart.view;

option java_outer_classname = "ShoppingCartViewModel";

import "akkaserverless/annotations.proto";
import "cart/shopping_cart_domain.proto";
import "google/api/annotations.proto";

service ShoppingCartViewService {
  rpc ProcessAdded(shopping.cart.domain.ItemAdded) returns (CartViewState) {
    option (akkaserverless.method).eventing = {
      in: {
        event_sourced_entity: "eventsourced-shopping-cart"
      }
    };
    option (akkaserverless.method).view.update = {
      table: "carts"
      transform_updates: true
    };
  }
  rpc ProcessRemoved(shopping.cart.domain.ItemRemoved) returns (CartViewState) {
    option (akkaserverless.method).eventing = {
      in: {
        event_sourced_entity: "eventsourced-shopping-cart"
      }
    };
    option (akkaserverless.method).view.update = {
      table: "carts"
      transform_updates: true
    };
  }
  rpc ProcessCheckedOut(shopping.cart.domain.CheckedOut) returns (CartViewState) {
    option (akkaserverless.method).eventing = {
      in: {
        event_sourced_entity: "eventsourced-shopping-cart"
      }
    };
    option (akkaserverless.method).view.update = {
      table: "carts"
      transform_updates: true
    };
  }
  rpc GetCheckedOutCarts(GetCheckedOutCartsRequest) returns (stream CartViewState) {
    option (akkaserverless.method).view.query = {
      query: "select * from carts where checked_out_timestamp >= :timestamp"
    };
    option (google.api.http) = {
      get: "/carts"
    };
  }
}

message CartViewState {
  string cart_id = 1;
  int32 number_of_items = 2;
  int64 checked_out_timestamp = 3;
}

message GetCheckedOutCartsRequest {
  int64 timestamp = 1;
}
